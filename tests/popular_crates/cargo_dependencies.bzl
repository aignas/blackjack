"""
DO NOT EDIT!

This file is automatically generated by blackjack.
"""
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

def cargo_dependencies():


    http_archive(
        name = "crates_io_actix_codec_0.2.0",
        url = "https://crates.io/api/v1/crates/actix-codec/0.2.0/download",
        strip_prefix = "actix-codec-0.2.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_codec",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bitflags_1.2.1//:bitflags", "@crates_io_bytes_0.5.6//:bytes", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_sink_0.3.5//:futures_sink", "@crates_io_log_0.4.11//:log", "@crates_io_tokio_0.2.22//:tokio", "@crates_io_tokio_util_0.2.0//:tokio_util"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_connect_1.0.2",
        url = "https://crates.io/api/v1/crates/actix-connect/1.0.2/download",
        strip_prefix = "actix-connect-1.0.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_connect",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_actix_utils_1.0.6//:actix_utils", "@crates_io_either_1.6.0//:either", "@crates_io_futures_0.3.5//:futures", "@crates_io_http_0.2.1//:http", "@crates_io_log_0.4.11//:log", "@crates_io_trust_dns_proto_0.18.0-alpha.2//:trust_dns_proto", "@crates_io_trust_dns_resolver_0.18.0-alpha.2//:trust_dns_resolver"],
    proc_macro_deps = ["@crates_io_derive_more_0.99.9//:derive_more"],
    edition = "2018",
    crate_features = ["default", "http", "uri"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_http_1.0.1",
        url = "https://crates.io/api/v1/crates/actix-http/1.0.1/download",
        strip_prefix = "actix-http-1.0.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_http",
    aliases = {"@crates_io_failure_0.1.8//:failure": "fail_ure"},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_connect_1.0.2//:actix_connect", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_actix_threadpool_0.3.3//:actix_threadpool", "@crates_io_actix_utils_1.0.6//:actix_utils", "@crates_io_base64_0.11.0//:base64", "@crates_io_bitflags_1.2.1//:bitflags", "@crates_io_brotli2_0.3.2//:brotli2", "@crates_io_bytes_0.5.6//:bytes", "@crates_io_chrono_0.4.15//:chrono", "@crates_io_copyless_0.1.5//:copyless", "@crates_io_either_1.6.0//:either", "@crates_io_encoding_rs_0.8.23//:encoding_rs", "@crates_io_failure_0.1.8//:failure", "@crates_io_flate2_1.0.17//:flate2", "@crates_io_futures_channel_0.3.5//:futures_channel", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_util_0.3.5//:futures_util", "@crates_io_fxhash_0.2.1//:fxhash", "@crates_io_h2_0.2.6//:h2", "@crates_io_http_0.2.1//:http", "@crates_io_httparse_1.3.4//:httparse", "@crates_io_indexmap_1.5.1//:indexmap", "@crates_io_language_tags_0.2.2//:language_tags", "@crates_io_lazy_static_1.4.0//:lazy_static", "@crates_io_log_0.4.11//:log", "@crates_io_mime_0.3.16//:mime", "@crates_io_percent_encoding_2.1.0//:percent_encoding", "@crates_io_pin_project_0.4.23//:pin_project", "@crates_io_rand_0.7.3//:rand", "@crates_io_regex_1.3.9//:regex", "@crates_io_serde_1.0.115//:serde", "@crates_io_serde_json_1.0.57//:serde_json", "@crates_io_serde_urlencoded_0.6.1//:serde_urlencoded", "@crates_io_sha1_0.6.0//:sha1", "@crates_io_slab_0.4.2//:slab", "@crates_io_time_0.1.43//:time"],
    proc_macro_deps = ["@crates_io_derive_more_0.99.9//:derive_more"],
    edition = "2018",
    crate_features = ["brotli2", "compress", "default", "fail-ure", "failure", "flate2"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_macros_0.1.2",
        url = "https://crates.io/api/v1/crates/actix-macros/0.1.2/download",
        strip_prefix = "actix-macros-0.1.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_macros",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_router_0.2.4",
        url = "https://crates.io/api/v1/crates/actix-router/0.2.4/download",
        strip_prefix = "actix-router-0.2.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_router",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytestring_0.1.5//:bytestring", "@crates_io_http_0.2.1//:http", "@crates_io_log_0.4.11//:log", "@crates_io_regex_1.3.9//:regex", "@crates_io_serde_1.0.115//:serde"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "http"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_rt_1.1.1",
        url = "https://crates.io/api/v1/crates/actix-rt/1.1.1/download",
        strip_prefix = "actix-rt-1.1.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_rt",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_threadpool_0.3.3//:actix_threadpool", "@crates_io_copyless_0.1.5//:copyless", "@crates_io_futures_channel_0.3.5//:futures_channel", "@crates_io_futures_util_0.3.5//:futures_util", "@crates_io_smallvec_1.4.2//:smallvec", "@crates_io_tokio_0.2.22//:tokio"],
    proc_macro_deps = ["@crates_io_actix_macros_0.1.2//:actix_macros"],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_server_1.0.3",
        url = "https://crates.io/api/v1/crates/actix-server/1.0.3/download",
        strip_prefix = "actix-server-1.0.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_server",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_actix_utils_1.0.6//:actix_utils", "@crates_io_futures_channel_0.3.5//:futures_channel", "@crates_io_futures_util_0.3.5//:futures_util", "@crates_io_log_0.4.11//:log", "@crates_io_mio_0.6.22//:mio", "@crates_io_mio_uds_0.6.8//:mio_uds", "@crates_io_num_cpus_1.13.0//:num_cpus", "@crates_io_slab_0.4.2//:slab", "@crates_io_socket2_0.3.12//:socket2"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_service_1.0.6",
        url = "https://crates.io/api/v1/crates/actix-service/1.0.6/download",
        strip_prefix = "actix-service-1.0.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_service",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_futures_util_0.3.5//:futures_util", "@crates_io_pin_project_0.4.23//:pin_project"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_testing_1.0.1",
        url = "https://crates.io/api/v1/crates/actix-testing/1.0.1/download",
        strip_prefix = "actix-testing-1.0.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_testing",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_server_1.0.3//:actix_server", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_log_0.4.11//:log", "@crates_io_socket2_0.3.12//:socket2"],
    proc_macro_deps = ["@crates_io_actix_macros_0.1.2//:actix_macros"],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_threadpool_0.3.3",
        url = "https://crates.io/api/v1/crates/actix-threadpool/0.3.3/download",
        strip_prefix = "actix-threadpool-0.3.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_threadpool",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_futures_channel_0.3.5//:futures_channel", "@crates_io_lazy_static_1.4.0//:lazy_static", "@crates_io_log_0.4.11//:log", "@crates_io_num_cpus_1.13.0//:num_cpus", "@crates_io_parking_lot_0.11.0//:parking_lot", "@crates_io_threadpool_1.8.1//:threadpool"],
    proc_macro_deps = ["@crates_io_derive_more_0.99.9//:derive_more"],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_tls_1.0.0",
        url = "https://crates.io/api/v1/crates/actix-tls/1.0.0/download",
        strip_prefix = "actix-tls-1.0.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_tls",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_actix_utils_1.0.6//:actix_utils", "@crates_io_either_1.6.0//:either", "@crates_io_futures_0.3.5//:futures", "@crates_io_log_0.4.11//:log"],
    proc_macro_deps = ["@crates_io_derive_more_0.99.9//:derive_more"],
    edition = "2018",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_utils_1.0.6",
        url = "https://crates.io/api/v1/crates/actix-utils/1.0.6/download",
        strip_prefix = "actix-utils-1.0.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_utils",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_bitflags_1.2.1//:bitflags", "@crates_io_bytes_0.5.6//:bytes", "@crates_io_either_1.6.0//:either", "@crates_io_futures_0.3.5//:futures", "@crates_io_log_0.4.11//:log", "@crates_io_pin_project_0.4.23//:pin_project", "@crates_io_slab_0.4.2//:slab"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_web",
        url = "https://crates.io/api/v1/crates/actix-web/2.0.0/download",
        strip_prefix = "actix-web-2.0.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_web",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_http_1.0.1//:actix_http", "@crates_io_actix_router_0.2.4//:actix_router", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_server_1.0.3//:actix_server", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_actix_testing_1.0.1//:actix_testing", "@crates_io_actix_threadpool_0.3.3//:actix_threadpool", "@crates_io_actix_tls_1.0.0//:actix_tls", "@crates_io_actix_utils_1.0.6//:actix_utils", "@crates_io_awc_1.0.1//:awc", "@crates_io_bytes_0.5.6//:bytes", "@crates_io_encoding_rs_0.8.23//:encoding_rs", "@crates_io_futures_0.3.5//:futures", "@crates_io_fxhash_0.2.1//:fxhash", "@crates_io_log_0.4.11//:log", "@crates_io_mime_0.3.16//:mime", "@crates_io_net2_0.2.34//:net2", "@crates_io_pin_project_0.4.23//:pin_project", "@crates_io_regex_1.3.9//:regex", "@crates_io_serde_1.0.115//:serde", "@crates_io_serde_json_1.0.57//:serde_json", "@crates_io_serde_urlencoded_0.6.1//:serde_urlencoded", "@crates_io_time_0.1.43//:time", "@crates_io_url_2.1.1//:url"],
    proc_macro_deps = ["@crates_io_actix_macros_0.1.2//:actix_macros", "@crates_io_actix_web_codegen_0.2.2//:actix_web_codegen", "@crates_io_derive_more_0.99.9//:derive_more"],
    edition = "2018",
    crate_features = ["compress", "default", "failure"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_actix_web_codegen_0.2.2",
        url = "https://crates.io/api/v1/crates/actix-web-codegen/0.2.2/download",
        strip_prefix = "actix-web-codegen-0.2.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "actix_web_codegen",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_addr2line_0.13.0",
        url = "https://crates.io/api/v1/crates/addr2line/0.13.0/download",
        strip_prefix = "addr2line-0.13.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "addr2line",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_gimli_0.22.0//:gimli"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_adler_0.2.3",
        url = "https://crates.io/api/v1/crates/adler/0.2.3/download",
        strip_prefix = "adler-0.2.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "adler",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_aho_corasick_0.7.13",
        url = "https://crates.io/api/v1/crates/aho-corasick/0.7.13/download",
        strip_prefix = "aho-corasick-0.7.13",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "aho_corasick",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_memchr_2.3.3//:memchr"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_arc_swap_0.4.7",
        url = "https://crates.io/api/v1/crates/arc-swap/0.4.7/download",
        strip_prefix = "arc-swap-0.4.7",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "arc_swap",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_async_trait_0.1.38",
        url = "https://crates.io/api/v1/crates/async-trait/0.1.38/download",
        strip_prefix = "async-trait-0.1.38",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "async_trait",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_autocfg_1.0.1",
        url = "https://crates.io/api/v1/crates/autocfg/1.0.1/download",
        strip_prefix = "autocfg-1.0.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "autocfg",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_awc_1.0.1",
        url = "https://crates.io/api/v1/crates/awc/1.0.1/download",
        strip_prefix = "awc-1.0.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "awc",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_actix_codec_0.2.0//:actix_codec", "@crates_io_actix_http_1.0.1//:actix_http", "@crates_io_actix_rt_1.1.1//:actix_rt", "@crates_io_actix_service_1.0.6//:actix_service", "@crates_io_base64_0.11.0//:base64", "@crates_io_bytes_0.5.6//:bytes", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_log_0.4.11//:log", "@crates_io_mime_0.3.16//:mime", "@crates_io_percent_encoding_2.1.0//:percent_encoding", "@crates_io_rand_0.7.3//:rand", "@crates_io_serde_1.0.115//:serde", "@crates_io_serde_json_1.0.57//:serde_json", "@crates_io_serde_urlencoded_0.6.1//:serde_urlencoded"],
    proc_macro_deps = ["@crates_io_derive_more_0.99.9//:derive_more"],
    edition = "2018",
    crate_features = ["compress"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_backtrace_0.3.50",
        url = "https://crates.io/api/v1/crates/backtrace/0.3.50/download",
        strip_prefix = "backtrace-0.3.50",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "backtrace",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_addr2line_0.13.0//:addr2line", "@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_libc_0.2.76//:libc", "@crates_io_miniz_oxide_0.4.1//:miniz_oxide", "@crates_io_object_0.20.0//:object", "@crates_io_rustc_demangle_0.1.16//:rustc_demangle"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["addr2line", "default", "gimli-symbolize", "miniz_oxide", "object", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_base64_0.11.0",
        url = "https://crates.io/api/v1/crates/base64/0.11.0/download",
        strip_prefix = "base64-0.11.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "base64",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_bitflags_1.2.1",
        url = "https://crates.io/api/v1/crates/bitflags/1.2.1/download",
        strip_prefix = "bitflags-1.2.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "bitflags",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_brotli_sys_0.3.2",
        url = "https://crates.io/api/v1/crates/brotli-sys/0.3.2/download",
        strip_prefix = "brotli-sys-0.3.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "brotli_sys",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_brotli2_0.3.2",
        url = "https://crates.io/api/v1/crates/brotli2/0.3.2/download",
        strip_prefix = "brotli2-0.3.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "brotli2",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_brotli_sys_0.3.2//:brotli_sys", "@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_byteorder_1.3.4",
        url = "https://crates.io/api/v1/crates/byteorder/1.3.4/download",
        strip_prefix = "byteorder-1.3.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "byteorder",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_bytes_0.5.6",
        url = "https://crates.io/api/v1/crates/bytes/0.5.6/download",
        strip_prefix = "bytes-0.5.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "bytes",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_bytestring_0.1.5",
        url = "https://crates.io/api/v1/crates/bytestring/0.1.5/download",
        strip_prefix = "bytestring-0.1.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "bytestring",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytes_0.5.6//:bytes"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_cc_1.0.59",
        url = "https://crates.io/api/v1/crates/cc/1.0.59/download",
        strip_prefix = "cc-1.0.59",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "cc",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_cfg_if_0.1.10",
        url = "https://crates.io/api/v1/crates/cfg-if/0.1.10/download",
        strip_prefix = "cfg-if-0.1.10",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "cfg_if",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_chrono_0.4.15",
        url = "https://crates.io/api/v1/crates/chrono/0.4.15/download",
        strip_prefix = "chrono-0.4.15",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "chrono",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_num_integer_0.1.43//:num_integer", "@crates_io_num_traits_0.2.12//:num_traits", "@crates_io_time_0.1.43//:time"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["clock", "default", "std", "time"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_copyless_0.1.5",
        url = "https://crates.io/api/v1/crates/copyless/0.1.5/download",
        strip_prefix = "copyless-0.1.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "copyless",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_crc32fast_1.2.0",
        url = "https://crates.io/api/v1/crates/crc32fast/1.2.0/download",
        strip_prefix = "crc32fast-1.2.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "crc32fast",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_derive_more_0.99.9",
        url = "https://crates.io/api/v1/crates/derive_more/0.99.9/download",
        strip_prefix = "derive_more-0.99.9",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "derive_more",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["add", "add_assign", "as_mut", "as_ref", "constructor", "default", "deref", "deref_mut", "display", "error", "from", "from_str", "index", "index_mut", "into", "into_iterator", "iterator", "mul", "mul_assign", "not", "sum", "try_into"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_diesel",
        url = "https://crates.io/api/v1/crates/diesel/1.4.5/download",
        strip_prefix = "diesel-1.4.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "diesel",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_byteorder_1.3.4//:byteorder"],
    proc_macro_deps = ["@crates_io_diesel_derives_1.4.1//:diesel_derives"],
    edition = "2015",
    crate_features = ["32-column-tables", "default", "with-deprecated"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_diesel_derives_1.4.1",
        url = "https://crates.io/api/v1/crates/diesel_derives/1.4.1/download",
        strip_prefix = "diesel_derives-1.4.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "diesel_derives",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_dtoa_0.4.6",
        url = "https://crates.io/api/v1/crates/dtoa/0.4.6/download",
        strip_prefix = "dtoa-0.4.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "dtoa",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_either_1.6.0",
        url = "https://crates.io/api/v1/crates/either/1.6.0/download",
        strip_prefix = "either-1.6.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "either",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "use_std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_encoding_rs_0.8.23",
        url = "https://crates.io/api/v1/crates/encoding_rs/0.8.23/download",
        strip_prefix = "encoding_rs-0.8.23",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "encoding_rs",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_enum_as_inner_0.3.3",
        url = "https://crates.io/api/v1/crates/enum-as-inner/0.3.3/download",
        strip_prefix = "enum-as-inner-0.3.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "enum_as_inner",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_heck_0.3.1//:heck", "@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_failure_0.1.8",
        url = "https://crates.io/api/v1/crates/failure/0.1.8/download",
        strip_prefix = "failure-0.1.8",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "failure",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_backtrace_0.3.50//:backtrace"],
    proc_macro_deps = ["@crates_io_failure_derive_0.1.8//:failure_derive"],
    edition = "2015",
    crate_features = ["backtrace", "default", "derive", "failure_derive", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_failure_derive_0.1.8",
        url = "https://crates.io/api/v1/crates/failure_derive/0.1.8/download",
        strip_prefix = "failure_derive-0.1.8",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "failure_derive",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn", "@crates_io_synstructure_0.12.4//:synstructure"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_flate2_1.0.17",
        url = "https://crates.io/api/v1/crates/flate2/1.0.17/download",
        strip_prefix = "flate2-1.0.17",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "flate2",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_crc32fast_1.2.0//:crc32fast", "@crates_io_libc_0.2.76//:libc", "@crates_io_miniz_oxide_0.4.1//:miniz_oxide"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "miniz_oxide", "rust_backend"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_fnv_1.0.7",
        url = "https://crates.io/api/v1/crates/fnv/1.0.7/download",
        strip_prefix = "fnv-1.0.7",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "fnv",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_0.3.5",
        url = "https://crates.io/api/v1/crates/futures/0.3.5/download",
        strip_prefix = "futures-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_futures_channel_0.3.5//:futures_channel", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_executor_0.3.5//:futures_executor", "@crates_io_futures_io_0.3.5//:futures_io", "@crates_io_futures_sink_0.3.5//:futures_sink", "@crates_io_futures_task_0.3.5//:futures_task", "@crates_io_futures_util_0.3.5//:futures_util"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "async-await", "default", "executor", "futures-executor", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_channel_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-channel/0.3.5/download",
        strip_prefix = "futures-channel-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_channel",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_sink_0.3.5//:futures_sink"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "default", "futures-sink", "sink", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_core_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-core/0.3.5/download",
        strip_prefix = "futures-core-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_core",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_executor_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-executor/0.3.5/download",
        strip_prefix = "futures-executor-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_executor",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_task_0.3.5//:futures_task", "@crates_io_futures_util_0.3.5//:futures_util"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_io_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-io/0.3.5/download",
        strip_prefix = "futures-io-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_io",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_macro_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-macro/0.3.5/download",
        strip_prefix = "futures-macro-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_macro",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = ["@crates_io_proc_macro_hack_0.5.18//:proc_macro_hack"],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_sink_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-sink/0.3.5/download",
        strip_prefix = "futures-sink-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_sink",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_task_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-task/0.3.5/download",
        strip_prefix = "futures-task-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_task",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_once_cell_1.4.1//:once_cell"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "once_cell", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_futures_util_0.3.5",
        url = "https://crates.io/api/v1/crates/futures-util/0.3.5/download",
        strip_prefix = "futures-util-0.3.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "futures_util",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_futures_channel_0.3.5//:futures_channel", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_io_0.3.5//:futures_io", "@crates_io_futures_sink_0.3.5//:futures_sink", "@crates_io_futures_task_0.3.5//:futures_task", "@crates_io_memchr_2.3.3//:memchr", "@crates_io_pin_project_0.4.23//:pin_project", "@crates_io_pin_utils_0.1.0//:pin_utils", "@crates_io_proc_macro_nested_0.1.6//:proc_macro_nested", "@crates_io_slab_0.4.2//:slab"],
    proc_macro_deps = ["@crates_io_futures_macro_0.3.5//:futures_macro", "@crates_io_proc_macro_hack_0.5.18//:proc_macro_hack"],
    edition = "2018",
    crate_features = ["alloc", "async-await", "async-await-macro", "channel", "default", "futures-channel", "futures-io", "futures-macro", "futures-sink", "io", "memchr", "proc-macro-hack", "proc-macro-nested", "sink", "slab", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_fxhash_0.2.1",
        url = "https://crates.io/api/v1/crates/fxhash/0.2.1/download",
        strip_prefix = "fxhash-0.2.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "fxhash",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_byteorder_1.3.4//:byteorder"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_getrandom_0.1.14",
        url = "https://crates.io/api/v1/crates/getrandom/0.1.14/download",
        strip_prefix = "getrandom-0.1.14",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "getrandom",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_gimli_0.22.0",
        url = "https://crates.io/api/v1/crates/gimli/0.22.0/download",
        strip_prefix = "gimli-0.22.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "gimli",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["read"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_h2_0.2.6",
        url = "https://crates.io/api/v1/crates/h2/0.2.6/download",
        strip_prefix = "h2-0.2.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "h2",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytes_0.5.6//:bytes", "@crates_io_fnv_1.0.7//:fnv", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_sink_0.3.5//:futures_sink", "@crates_io_futures_util_0.3.5//:futures_util", "@crates_io_http_0.2.1//:http", "@crates_io_indexmap_1.5.1//:indexmap", "@crates_io_slab_0.4.2//:slab", "@crates_io_tokio_0.2.22//:tokio", "@crates_io_tokio_util_0.3.1//:tokio_util", "@crates_io_tracing_0.1.19//:tracing"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_hashbrown_0.8.2",
        url = "https://crates.io/api/v1/crates/hashbrown/0.8.2/download",
        strip_prefix = "hashbrown-0.8.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "hashbrown",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["raw"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_heck_0.3.1",
        url = "https://crates.io/api/v1/crates/heck/0.3.1/download",
        strip_prefix = "heck-0.3.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "heck",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_unicode_segmentation_1.6.0//:unicode_segmentation"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_hostname_0.3.1",
        url = "https://crates.io/api/v1/crates/hostname/0.3.1/download",
        strip_prefix = "hostname-0.3.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "hostname",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_libc_0.2.76//:libc", "@crates_io_match_cfg_0.1.0//:match_cfg"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_http_0.2.1",
        url = "https://crates.io/api/v1/crates/http/0.2.1/download",
        strip_prefix = "http-0.2.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "http",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytes_0.5.6//:bytes", "@crates_io_fnv_1.0.7//:fnv", "@crates_io_itoa_0.4.6//:itoa"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_httparse_1.3.4",
        url = "https://crates.io/api/v1/crates/httparse/1.3.4/download",
        strip_prefix = "httparse-1.3.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "httparse",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_idna_0.2.0",
        url = "https://crates.io/api/v1/crates/idna/0.2.0/download",
        strip_prefix = "idna-0.2.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "idna",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_matches_0.1.8//:matches", "@crates_io_unicode_bidi_0.3.4//:unicode_bidi", "@crates_io_unicode_normalization_0.1.13//:unicode_normalization"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_indexmap_1.5.1",
        url = "https://crates.io/api/v1/crates/indexmap/1.5.1/download",
        strip_prefix = "indexmap-1.5.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "indexmap",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_hashbrown_0.8.2//:hashbrown"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + ["--cfg=has_std"],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_instant_0.1.6",
        url = "https://crates.io/api/v1/crates/instant/0.1.6/download",
        strip_prefix = "instant-0.1.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "instant",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_iovec_0.1.4",
        url = "https://crates.io/api/v1/crates/iovec/0.1.4/download",
        strip_prefix = "iovec-0.1.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "iovec",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_itoa_0.4.6",
        url = "https://crates.io/api/v1/crates/itoa/0.4.6/download",
        strip_prefix = "itoa-0.4.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "itoa",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_language_tags_0.2.2",
        url = "https://crates.io/api/v1/crates/language-tags/0.2.2/download",
        strip_prefix = "language-tags-0.2.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "language_tags",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_lazy_static_1.4.0",
        url = "https://crates.io/api/v1/crates/lazy_static/1.4.0/download",
        strip_prefix = "lazy_static-1.4.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "lazy_static",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_libc_0.2.76",
        url = "https://crates.io/api/v1/crates/libc/0.2.76/download",
        strip_prefix = "libc-0.2.76",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "libc",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_linked_hash_map_0.5.3",
        url = "https://crates.io/api/v1/crates/linked-hash-map/0.5.3/download",
        strip_prefix = "linked-hash-map-0.5.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "linked_hash_map",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_lock_api_0.4.1",
        url = "https://crates.io/api/v1/crates/lock_api/0.4.1/download",
        strip_prefix = "lock_api-0.4.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "lock_api",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_scopeguard_1.1.0//:scopeguard"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_log_0.4.11",
        url = "https://crates.io/api/v1/crates/log/0.4.11/download",
        strip_prefix = "log-0.4.11",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "log",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_lru_cache_0.1.2",
        url = "https://crates.io/api/v1/crates/lru-cache/0.1.2/download",
        strip_prefix = "lru-cache-0.1.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "lru_cache",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_linked_hash_map_0.5.3//:linked_hash_map"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_match_cfg_0.1.0",
        url = "https://crates.io/api/v1/crates/match_cfg/0.1.0/download",
        strip_prefix = "match_cfg-0.1.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "match_cfg",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "use_core"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_matches_0.1.8",
        url = "https://crates.io/api/v1/crates/matches/0.1.8/download",
        strip_prefix = "matches-0.1.8",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "matches",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_memchr_2.3.3",
        url = "https://crates.io/api/v1/crates/memchr/2.3.3/download",
        strip_prefix = "memchr-2.3.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "memchr",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "std", "use_std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_mime_0.3.16",
        url = "https://crates.io/api/v1/crates/mime/0.3.16/download",
        strip_prefix = "mime-0.3.16",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "mime",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_miniz_oxide_0.4.1",
        url = "https://crates.io/api/v1/crates/miniz_oxide/0.4.1/download",
        strip_prefix = "miniz_oxide-0.4.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "miniz_oxide",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_adler_0.2.3//:adler"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_mio_0.6.22",
        url = "https://crates.io/api/v1/crates/mio/0.6.22/download",
        strip_prefix = "mio-0.6.22",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "mio",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_iovec_0.1.4//:iovec", "@crates_io_libc_0.2.76//:libc", "@crates_io_log_0.4.11//:log", "@crates_io_net2_0.2.34//:net2", "@crates_io_slab_0.4.2//:slab"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "with-deprecated"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_mio_uds_0.6.8",
        url = "https://crates.io/api/v1/crates/mio-uds/0.6.8/download",
        strip_prefix = "mio-uds-0.6.8",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "mio_uds",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_iovec_0.1.4//:iovec", "@crates_io_libc_0.2.76//:libc", "@crates_io_mio_0.6.22//:mio"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_net2_0.2.34",
        url = "https://crates.io/api/v1/crates/net2/0.2.34/download",
        strip_prefix = "net2-0.2.34",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "net2",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "duration"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_num_integer_0.1.43",
        url = "https://crates.io/api/v1/crates/num-integer/0.1.43/download",
        strip_prefix = "num-integer-0.1.43",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "num_integer",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_num_traits_0.2.12//:num_traits"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_num_traits_0.2.12",
        url = "https://crates.io/api/v1/crates/num-traits/0.2.12/download",
        strip_prefix = "num-traits-0.2.12",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "num_traits",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_num_cpus_1.13.0",
        url = "https://crates.io/api/v1/crates/num_cpus/1.13.0/download",
        strip_prefix = "num_cpus-1.13.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "num_cpus",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_object_0.20.0",
        url = "https://crates.io/api/v1/crates/object/0.20.0/download",
        strip_prefix = "object-0.20.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "object",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["coff", "elf", "macho", "pe", "read_core", "unaligned"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_once_cell_1.4.1",
        url = "https://crates.io/api/v1/crates/once_cell/1.4.1/download",
        strip_prefix = "once_cell-1.4.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "once_cell",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_parking_lot_0.11.0",
        url = "https://crates.io/api/v1/crates/parking_lot/0.11.0/download",
        strip_prefix = "parking_lot-0.11.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "parking_lot",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_instant_0.1.6//:instant", "@crates_io_lock_api_0.4.1//:lock_api", "@crates_io_parking_lot_core_0.8.0//:parking_lot_core"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_parking_lot_core_0.8.0",
        url = "https://crates.io/api/v1/crates/parking_lot_core/0.8.0/download",
        strip_prefix = "parking_lot_core-0.8.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "parking_lot_core",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_instant_0.1.6//:instant", "@crates_io_libc_0.2.76//:libc", "@crates_io_smallvec_1.4.2//:smallvec"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_percent_encoding_2.1.0",
        url = "https://crates.io/api/v1/crates/percent-encoding/2.1.0/download",
        strip_prefix = "percent-encoding-2.1.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "percent_encoding",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_pin_project_0.4.23",
        url = "https://crates.io/api/v1/crates/pin-project/0.4.23/download",
        strip_prefix = "pin-project-0.4.23",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "pin_project",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = ["@crates_io_pin_project_internal_0.4.23//:pin_project_internal"],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_pin_project_internal_0.4.23",
        url = "https://crates.io/api/v1/crates/pin-project-internal/0.4.23/download",
        strip_prefix = "pin-project-internal-0.4.23",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "pin_project_internal",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_pin_project_lite_0.1.7",
        url = "https://crates.io/api/v1/crates/pin-project-lite/0.1.7/download",
        strip_prefix = "pin-project-lite-0.1.7",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "pin_project_lite",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_pin_utils_0.1.0",
        url = "https://crates.io/api/v1/crates/pin-utils/0.1.0/download",
        strip_prefix = "pin-utils-0.1.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "pin_utils",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_ppv_lite86_0.2.9",
        url = "https://crates.io/api/v1/crates/ppv-lite86/0.2.9/download",
        strip_prefix = "ppv-lite86-0.2.9",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "ppv_lite86",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["simd", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_proc_macro_hack_0.5.18",
        url = "https://crates.io/api/v1/crates/proc-macro-hack/0.5.18/download",
        strip_prefix = "proc-macro-hack-0.5.18",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "proc_macro_hack",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_proc_macro_nested_0.1.6",
        url = "https://crates.io/api/v1/crates/proc-macro-nested/0.1.6/download",
        strip_prefix = "proc-macro-nested-0.1.6",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

load("@io_bazel_rules_rust//cargo:cargo_build_script.bzl", "cargo_build_script")

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
)
                
rust_library(
    name = "proc_macro_nested",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [":build_script"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_proc_macro2_1.0.19",
        url = "https://crates.io/api/v1/crates/proc-macro2/1.0.19/download",
        strip_prefix = "proc-macro2-1.0.19",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "proc_macro2",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_unicode_xid_0.2.1//:unicode_xid"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "proc-macro"],
    rustc_flags = ["--cap-lints=allow"] + ["--cfg=use_proc_macro"],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_quick_error_1.2.3",
        url = "https://crates.io/api/v1/crates/quick-error/1.2.3/download",
        strip_prefix = "quick-error-1.2.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "quick_error",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_quote_1.0.7",
        url = "https://crates.io/api/v1/crates/quote/1.0.7/download",
        strip_prefix = "quote-1.0.7",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "quote",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "proc-macro"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_rand_0.7.3",
        url = "https://crates.io/api/v1/crates/rand/0.7.3/download",
        strip_prefix = "rand-0.7.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "rand",
    aliases = {"@crates_io_getrandom_0.1.14//:getrandom": "getrandom_package"},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_getrandom_0.1.14//:getrandom", "@crates_io_libc_0.2.76//:libc", "@crates_io_rand_chacha_0.2.2//:rand_chacha", "@crates_io_rand_core_0.5.1//:rand_core"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "default", "getrandom", "getrandom_package", "libc", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_rand_chacha_0.2.2",
        url = "https://crates.io/api/v1/crates/rand_chacha/0.2.2/download",
        strip_prefix = "rand_chacha-0.2.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "rand_chacha",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_ppv_lite86_0.2.9//:ppv_lite86", "@crates_io_rand_core_0.5.1//:rand_core"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_rand_core_0.5.1",
        url = "https://crates.io/api/v1/crates/rand_core/0.5.1/download",
        strip_prefix = "rand_core-0.5.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "rand_core",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_getrandom_0.1.14//:getrandom"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "getrandom", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_regex_1.3.9",
        url = "https://crates.io/api/v1/crates/regex/1.3.9/download",
        strip_prefix = "regex-1.3.9",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "regex",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_aho_corasick_0.7.13//:aho_corasick", "@crates_io_memchr_2.3.3//:memchr", "@crates_io_regex_syntax_0.6.18//:regex_syntax", "@crates_io_thread_local_1.0.1//:thread_local"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["aho-corasick", "default", "memchr", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_regex_syntax_0.6.18",
        url = "https://crates.io/api/v1/crates/regex-syntax/0.6.18/download",
        strip_prefix = "regex-syntax-0.6.18",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "regex_syntax",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_resolv_conf_0.6.3",
        url = "https://crates.io/api/v1/crates/resolv-conf/0.6.3/download",
        strip_prefix = "resolv-conf-0.6.3",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "resolv_conf",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_hostname_0.3.1//:hostname", "@crates_io_quick_error_1.2.3//:quick_error"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["hostname", "system"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_rustc_demangle_0.1.16",
        url = "https://crates.io/api/v1/crates/rustc-demangle/0.1.16/download",
        strip_prefix = "rustc-demangle-0.1.16",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "rustc_demangle",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_ryu_1.0.5",
        url = "https://crates.io/api/v1/crates/ryu/1.0.5/download",
        strip_prefix = "ryu-1.0.5",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "ryu",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_scopeguard_1.1.0",
        url = "https://crates.io/api/v1/crates/scopeguard/1.1.0/download",
        strip_prefix = "scopeguard-1.1.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "scopeguard",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_serde_1.0.115",
        url = "https://crates.io/api/v1/crates/serde/1.0.115/download",
        strip_prefix = "serde-1.0.115",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "serde",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = ["@crates_io_serde_derive_1.0.115//:serde_derive"],
    edition = "2015",
    crate_features = ["default", "derive", "serde_derive", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_serde_derive_1.0.115",
        url = "https://crates.io/api/v1/crates/serde_derive/1.0.115/download",
        strip_prefix = "serde_derive-1.0.115",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "serde_derive",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "proc-macro",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_serde_json_1.0.57",
        url = "https://crates.io/api/v1/crates/serde_json/1.0.57/download",
        strip_prefix = "serde_json-1.0.57",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "serde_json",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_itoa_0.4.6//:itoa", "@crates_io_ryu_1.0.5//:ryu", "@crates_io_serde_1.0.115//:serde"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_serde_urlencoded_0.6.1",
        url = "https://crates.io/api/v1/crates/serde_urlencoded/0.6.1/download",
        strip_prefix = "serde_urlencoded-0.6.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "serde_urlencoded",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_dtoa_0.4.6//:dtoa", "@crates_io_itoa_0.4.6//:itoa", "@crates_io_serde_1.0.115//:serde", "@crates_io_url_2.1.1//:url"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_sha1_0.6.0",
        url = "https://crates.io/api/v1/crates/sha1/0.6.0/download",
        strip_prefix = "sha1-0.6.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "sha1",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_signal_hook_registry_1.2.1",
        url = "https://crates.io/api/v1/crates/signal-hook-registry/1.2.1/download",
        strip_prefix = "signal-hook-registry-1.2.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "signal_hook_registry",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_arc_swap_0.4.7//:arc_swap", "@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_slab_0.4.2",
        url = "https://crates.io/api/v1/crates/slab/0.4.2/download",
        strip_prefix = "slab-0.4.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "slab",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_smallvec_1.4.2",
        url = "https://crates.io/api/v1/crates/smallvec/1.4.2/download",
        strip_prefix = "smallvec-1.4.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "smallvec",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_socket2_0.3.12",
        url = "https://crates.io/api/v1/crates/socket2/0.3.12/download",
        strip_prefix = "socket2-0.3.12",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "socket2",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_syn_1.0.39",
        url = "https://crates.io/api/v1/crates/syn/1.0.39/download",
        strip_prefix = "syn-1.0.39",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "syn",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_unicode_xid_0.2.1//:unicode_xid"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "visit", "visit-mut"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_synstructure_0.12.4",
        url = "https://crates.io/api/v1/crates/synstructure/0.12.4/download",
        strip_prefix = "synstructure-0.12.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "synstructure",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_proc_macro2_1.0.19//:proc_macro2", "@crates_io_quote_1.0.7//:quote", "@crates_io_syn_1.0.39//:syn", "@crates_io_unicode_xid_0.2.1//:unicode_xid"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "proc-macro"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_thread_local_1.0.1",
        url = "https://crates.io/api/v1/crates/thread_local/1.0.1/download",
        strip_prefix = "thread_local-1.0.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "thread_local",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_lazy_static_1.4.0//:lazy_static"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_threadpool_1.8.1",
        url = "https://crates.io/api/v1/crates/threadpool/1.8.1/download",
        strip_prefix = "threadpool-1.8.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "threadpool",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_num_cpus_1.13.0//:num_cpus"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_time_0.1.43",
        url = "https://crates.io/api/v1/crates/time/0.1.43/download",
        strip_prefix = "time-0.1.43",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "time",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_libc_0.2.76//:libc"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_tinyvec_0.3.4",
        url = "https://crates.io/api/v1/crates/tinyvec/0.3.4/download",
        strip_prefix = "tinyvec-0.3.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "tinyvec",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["alloc", "default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_tokio_0.2.22",
        url = "https://crates.io/api/v1/crates/tokio/0.2.22/download",
        strip_prefix = "tokio-0.2.22",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "tokio",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytes_0.5.6//:bytes", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_iovec_0.1.4//:iovec", "@crates_io_lazy_static_1.4.0//:lazy_static", "@crates_io_libc_0.2.76//:libc", "@crates_io_memchr_2.3.3//:memchr", "@crates_io_mio_0.6.22//:mio", "@crates_io_mio_uds_0.6.8//:mio_uds", "@crates_io_pin_project_lite_0.1.7//:pin_project_lite", "@crates_io_signal_hook_registry_1.2.1//:signal_hook_registry", "@crates_io_slab_0.4.2//:slab"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "futures-core", "io-driver", "io-util", "iovec", "lazy_static", "libc", "memchr", "mio", "mio-uds", "rt-core", "rt-util", "signal", "signal-hook-registry", "slab", "stream", "tcp", "time", "udp", "uds", "winapi"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_tokio_util_0.2.0",
        url = "https://crates.io/api/v1/crates/tokio-util/0.2.0/download",
        strip_prefix = "tokio-util-0.2.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "tokio_util",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytes_0.5.6//:bytes", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_sink_0.3.5//:futures_sink", "@crates_io_log_0.4.11//:log", "@crates_io_pin_project_lite_0.1.7//:pin_project_lite", "@crates_io_tokio_0.2.22//:tokio"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["codec"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_tokio_util_0.3.1",
        url = "https://crates.io/api/v1/crates/tokio-util/0.3.1/download",
        strip_prefix = "tokio-util-0.3.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "tokio_util",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_bytes_0.5.6//:bytes", "@crates_io_futures_core_0.3.5//:futures_core", "@crates_io_futures_sink_0.3.5//:futures_sink", "@crates_io_log_0.4.11//:log", "@crates_io_pin_project_lite_0.1.7//:pin_project_lite", "@crates_io_tokio_0.2.22//:tokio"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["codec", "default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_tracing_0.1.19",
        url = "https://crates.io/api/v1/crates/tracing/0.1.19/download",
        strip_prefix = "tracing-0.1.19",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "tracing",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_log_0.4.11//:log", "@crates_io_tracing_core_0.1.14//:tracing_core"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["log", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_tracing_core_0.1.14",
        url = "https://crates.io/api/v1/crates/tracing-core/0.1.14/download",
        strip_prefix = "tracing-core-0.1.14",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "tracing_core",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_lazy_static_1.4.0//:lazy_static"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["lazy_static", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_trust_dns_proto_0.18.0-alpha.2",
        url = "https://crates.io/api/v1/crates/trust-dns-proto/0.18.0-alpha.2/download",
        strip_prefix = "trust-dns-proto-0.18.0-alpha.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "trust_dns_proto",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_failure_0.1.8//:failure", "@crates_io_futures_0.3.5//:futures", "@crates_io_idna_0.2.0//:idna", "@crates_io_lazy_static_1.4.0//:lazy_static", "@crates_io_log_0.4.11//:log", "@crates_io_rand_0.7.3//:rand", "@crates_io_smallvec_1.4.2//:smallvec", "@crates_io_socket2_0.3.12//:socket2", "@crates_io_tokio_0.2.22//:tokio", "@crates_io_url_2.1.1//:url"],
    proc_macro_deps = ["@crates_io_async_trait_0.1.38//:async_trait", "@crates_io_enum_as_inner_0.3.3//:enum_as_inner"],
    edition = "2018",
    crate_features = ["default", "tokio", "tokio-compat"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_trust_dns_resolver_0.18.0-alpha.2",
        url = "https://crates.io/api/v1/crates/trust-dns-resolver/0.18.0-alpha.2/download",
        strip_prefix = "trust-dns-resolver-0.18.0-alpha.2",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "trust_dns_resolver",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_cfg_if_0.1.10//:cfg_if", "@crates_io_failure_0.1.8//:failure", "@crates_io_futures_0.3.5//:futures", "@crates_io_lazy_static_1.4.0//:lazy_static", "@crates_io_log_0.4.11//:log", "@crates_io_lru_cache_0.1.2//:lru_cache", "@crates_io_resolv_conf_0.6.3//:resolv_conf", "@crates_io_smallvec_1.4.2//:smallvec", "@crates_io_tokio_0.2.22//:tokio", "@crates_io_trust_dns_proto_0.18.0-alpha.2//:trust_dns_proto"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "tokio", "tokio-compat"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_unicode_bidi_0.3.4",
        url = "https://crates.io/api/v1/crates/unicode-bidi/0.3.4/download",
        strip_prefix = "unicode-bidi-0.3.4",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "unicode_bidi",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_matches_0.1.8//:matches"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_unicode_normalization_0.1.13",
        url = "https://crates.io/api/v1/crates/unicode-normalization/0.1.13/download",
        strip_prefix = "unicode-normalization-0.1.13",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "unicode_normalization",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_tinyvec_0.3.4//:tinyvec"],
    proc_macro_deps = [],
    edition = "2018",
    crate_features = ["default", "std"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_unicode_segmentation_1.6.0",
        url = "https://crates.io/api/v1/crates/unicode-segmentation/1.6.0/download",
        strip_prefix = "unicode-segmentation-1.6.0",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "unicode_segmentation",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_unicode_xid_0.2.1",
        url = "https://crates.io/api/v1/crates/unicode-xid/0.2.1/download",
        strip_prefix = "unicode-xid-0.2.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "unicode_xid",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = [],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = ["default"],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    

    http_archive(
        name = "crates_io_url_2.1.1",
        url = "https://crates.io/api/v1/crates/url/2.1.1/download",
        strip_prefix = "url-2.1.1",
        type = "tar.gz",
        build_file_content = """
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "url",
    aliases = {},
    srcs = glob(["**/*.rs"]),
    crate_type = "lib",
    deps = ["@crates_io_idna_0.2.0//:idna", "@crates_io_matches_0.1.8//:matches", "@crates_io_percent_encoding_2.1.0//:percent_encoding"],
    proc_macro_deps = [],
    edition = "2015",
    crate_features = [],
    rustc_flags = ["--cap-lints=allow"] + [],
    visibility = ["//visibility:public"],
)
    """,
    )
    
